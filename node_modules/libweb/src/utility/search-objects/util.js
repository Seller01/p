export function searchField(search, value) {
    if (_.isArray(value)) {
        for (let i = 0; i < value.length; i++) {
            const k = value[i];
            const res = searchField(search,  k)
            if (res) {
                return true;
            }
        }
        return false;
    } else if (_.isObject(value)) {
        const keys = Object.keys(value)
        for (let i = 0; i < keys.length; i++) {
            const k = value[keys[i]];
            const res = searchField(search,  k)
            if (res) {
                return true;
            }
        }
        return false;
    }
    return value.toString().toLowerCase().indexOf(search) > -1;
}

export function searchObject(search, o, properties) {
    var values = properties.map(function (p) { return o[p]; });
    var k = values.findIndex(function (v) {
        if (v === undefined || v === null) {
            return false;
        }
        return searchField(search, v);
    });
    return k > -1;
}