/**
 * _Layout keys:
 * 
 * xsrf-token
 * xsrf-header-name
 * env
 * cultures
 * fallback-culture
 * culture
 * direction
 * file-icon-path
 * thumber-options
 * user
 */
const rawElements = document.getElementsByClassName("libw-raw-value");
const jsonElements = document.getElementsByClassName("libw-json-value");
const resultTempElements = document.getElementsByClassName("libw-result-temp-value");
const cache = {
    rtmp: null,
    values: null
}
export class ServerValues {
    /**
     * Gets TempData values
     * @returns {Object}
     */
    getResultTempValues() {
        if (!_.isEmpty(cache.rtmp)) {
            return cache.rtmp;
        }
        var res = {};
        Array.from(resultTempElements).forEach(node => {
            try {
                const name = node.getAttribute("name");
                res[name] = JSON.parse(node.innerHTML);
            } catch (error) {
                console.log(`name: ${name} - value: ${node.innerHTML}`);
                console.warn(error);
            }
        });
        cache.rtmp = res;
        return res;
    }
    /**
     * Gets all server side values
     * @returns {Object}
     */
    getValues() {
        if (!_.isEmpty(cache.values)) {
            return cache.values;
        }
        var res = {};
        Array.from(rawElements).forEach(node => {
            try {
                const name = node.getAttribute("name");
                res[name] = node.innerHTML;
            } catch (error) {
                console.log(`name: ${name} - value: ${node.innerHTML}`);
                console.warn(error);
            }
        });
        Array.from(jsonElements).forEach(node => {
            try {
                const name = node.getAttribute("name");
                res[name] = JSON.parse(node.innerHTML);
            } catch (error) {
                console.log(`name: ${name} - value: ${node.innerHTML}`);
                console.warn(error);
            }
        });
        cache.values = res;
        return res;
    }
}
