import Block from '../Block';
export default class ImagesUrl extends Block {
    getType() {
        return 'images-url';
    }
    getEmptyData() {
        return {
            type: 'unknown',        //gallery, carousel, slider
            images: [],             //array of {url, caption}
        };
    }
    isDataValid(data, config) {
        var keysCount = Object.keys(this.getEmptyData()).length;
        var keys = Object.keys(data);
        if (keys.length !== keysCount) {
            return false;
        }
        if (_.isNil(data.type) || _.isNil(data.images) || !Array.isArray(data.images)) {
            return false;
        }
        if (data.images.length > 0) {
            let i = data.images.findIndex(image => {
                return _.isNil(image.url) || _.isNil(image.caption);
            });
            if (i > -1) {
                return false;
            }
        }
        if (!_.isNil(config)) {
            var validTypes = config.validTypes;
            let i = validTypes.findIndex(type => type === data.type);
            return i > -1;
        }
        return true;
    }
    getEmptyConfig() {
        return {
            validExtensions: ['jpg', 'jpeg', 'gif', 'png', 'svg'],
            validTypes: ['unknown', 'gallery', 'carousel', 'slider']
        };
    }
    mergeData(dest, src) {
        if (!_.isNil(src.type)) {
            dest.type = src.type;
        }
        if (!_.isNil(src.images)) {
            dest.images.splice(0, dest.images.length);
            src.images.forEach(img => {
                dest.images.push({
                    url: img.url,
                    caption: img.caption
                });
            });
        }
    }
}