export default class Block {
    getType() {
        throw 'not implemented';
    }
    getEmptyData() {
        throw 'not implemented';
    }
    /**
     * 
     * @param {Object} data 
     * @param {Object} config
     */
    isDataValid(data, config) {
        throw 'not implemented';
    }
    getEmptyConfig() {
        throw 'not implemented';
    }
    /**
     * 
     * @param {Object} dest 
     * @param {Object} src 
     */
    mergeData(dest, src) {
        throw 'not implemented';
    }
    getEmpty() {
        return {
            type: this.getType(),
            data: this.getEmptyData()
        };
    }
    /**
     * 
     * @param {Object} value
     * @param {String} value.type
     * @param {Object} value.data
     * @param {Object} config
     */
    isValid(value, config) {
        if (_.isNil(value) || !_.isObject(value) ||
            _.isNil(value.type) || _.isNil(value.data) || !_.isString(value.type) ||
            !_.isObject(value.data)) {
            return false;
        }
        if (this.getType() !== value.type) {
            return false;
        }
        return this.isDataValid(value.data, config);
    }
}